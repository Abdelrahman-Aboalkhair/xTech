generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  ADMIN
  USER
  SUPERADMIN
}

enum TRANSACTION_STATUS {
  PENDING
  PROCESSING
  SHIPPED
  IN_TRANSIT
  DELIVERED
  CANCELED
  RETURNED
  REFUNDED
}

enum PAYMENT_STATUS {
  PENDING
  PAID
  CANCELED
  FAILED
  REFUNDED
  PARTIALLY_REFUNDED
}

enum CART_STATUS {
  ACTIVE
  ABANDONED
  CONVERTED
}

enum CHAT_STATUS {
  OPEN
  RESOLVED
}

model User {
  id                              String    @id @default(uuid())
  googleId                        String?
  twitterId                       String?
  facebookId                      String?
  email                           String    @unique
  password                        String?
  name                            String
  avatar                          String?
  emailVerified                   Boolean   @default(false)
  emailVerificationToken          String?
  emailVerificationTokenExpiresAt DateTime?
  resetPasswordToken              String?
  resetPasswordTokenExpiresAt     DateTime?
  role                            ROLE      @default(USER)
  createdAt                       DateTime  @default(now())
  updatedAt                       DateTime  @updatedAt

  @@index([email])
}

model Product {
  id          String    @id @default(uuid())
  name        String    @unique
  price       Float
  description String?
  slug        String    @unique
  images      String[]  @default([])
  videoUrl    String?
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([name, slug])
}

model Category {
  id          String    @id @default(uuid())
  slug        String    @unique
  name        String
  description String?
  images      String[]
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([name, slug])
}

model Log {
  id        String   @id @default(uuid())
  level     String
  message   String
  context   Json?
  createdAt DateTime @default(now())
}
